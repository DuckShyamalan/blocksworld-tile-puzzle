import java.util.ArrayList;
import java.util.List;

public class Nodes { // node class -- used in trees generated by SearchAlgos. Contains board state, depth, and Manhattan Distance for A*
	protected Grid grid;
	protected int depth;
    protected String directionFromParent;
    protected Nodes parent;
	public int f;
	public List<Nodes> neighbours = new ArrayList<Nodes>();

    //Initial constructor, makes a new puzzle
    public Nodes(int n) {
        grid = new Grid(n);
        this.depth = 0;
        directionFromParent = "INITIAL";
        this.parent = null;
    }
    
    /* New constructor for going down the tree. It takes the old Grid from before and
     * duplicates it so that nothing breaks referencing up the tree.
     * The depth is incremented.
     */
     public Nodes(Grid grid, int depth, String directionFromParent, Nodes parent) {
         this.grid = grid;
         this.depth = depth;
         this.directionFromParent = directionFromParent;
         this.parent = parent;
     }
     
     //getters and setters
     public Grid getGrid() {
         return grid;
     }

     public void setGrid(Grid grid) {
         this.grid = grid;
     }

     public int getDepth() {
         return depth;
     }

     public void setDepth(int depth) {
         this.depth = depth;
     }
     
     public String getDirectionFromParent() {
         return directionFromParent;
     }

     public void setDirectionFromParent(String directionFromParent) {
         this.directionFromParent = directionFromParent;
     }

     public Nodes getParent() {
         return parent;
     }

     public void setParent(Nodes parent) {
         this.parent = parent;
     }
     //

}
